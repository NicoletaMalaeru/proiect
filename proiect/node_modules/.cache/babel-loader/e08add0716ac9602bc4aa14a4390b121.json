{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gabi\\\\Desktop\\\\niki-store\\\\src\\\\context\\\\filter_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useContext, useReducer } from 'react';\nimport reducer from '../reducers/filter_reducer';\nimport { LOAD_PRODUCTS, SET_GRIDVIEW, SET_LISTVIEW, UPDATE_SORT, SORT_PRODUCTS, UPDATE_FILTERS, FILTER_PRODUCTS, CLEAR_FILTERS } from '../actions';\nimport { useProductsContext } from './products_context';\nconst initialState = {\n  filtered_products: [],\n  all_products: [],\n  grid_view: true,\n  sort: 'price-lowest',\n  filters: {\n    text: '',\n    category: 'all',\n    min_price: 0,\n    max_price: 0,\n    price: 0\n  }\n};\nconst FilterContext = /*#__PURE__*/React.createContext();\nexport const FilterProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    products\n  } = useProductsContext();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_PRODUCTS,\n      payload: products\n    });\n  }, [products]);\n  useEffect(() => {\n    dispatch({\n      type: FILTER_PRODUCTS\n    });\n    dispatch({\n      type: SORT_PRODUCTS\n    });\n  }, [products, state.sort, state.filters]);\n\n  const setGridView = () => {\n    dispatch({\n      type: SET_GRIDVIEW\n    });\n  };\n\n  const setListView = () => {\n    dispatch({\n      type: SET_LISTVIEW\n    });\n  };\n\n  const updateSort = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    dispatch({\n      type: UPDATE_SORT,\n      payload: value\n    });\n  };\n\n  const updateFilters = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    if (name === 'category') {\n      value = e.target.textContent;\n    }\n\n    if (name === 'price') {\n      value = Number(value);\n    }\n\n    dispatch({\n      type: UPDATE_FILTERS,\n      payload: {\n        name,\n        value\n      }\n    });\n  };\n\n  const clearFilters = e => {};\n\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: { ...state,\n      setGridView,\n      setListView,\n      updateSort,\n      updateFilters,\n      clearFilters\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n_s(FilterProvider, \"k64tZUIWNezMrbWVhA8xj3WhoSs=\", false, function () {\n  return [useProductsContext];\n});\n\n_c = FilterProvider;\nexport const useFilterContext = () => {\n  _s2();\n\n  return useContext(FilterContext);\n};\n\n_s2(useFilterContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"sources":["C:/Users/Gabi/Desktop/niki-store/src/context/filter_context.js"],"names":["React","useEffect","useContext","useReducer","reducer","LOAD_PRODUCTS","SET_GRIDVIEW","SET_LISTVIEW","UPDATE_SORT","SORT_PRODUCTS","UPDATE_FILTERS","FILTER_PRODUCTS","CLEAR_FILTERS","useProductsContext","initialState","filtered_products","all_products","grid_view","sort","filters","text","category","min_price","max_price","price","FilterContext","createContext","FilterProvider","children","products","state","dispatch","type","payload","setGridView","setListView","updateSort","e","name","target","value","updateFilters","textContent","Number","clearFilters","useFilterContext"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useReducer } from 'react'\nimport reducer from '../reducers/filter_reducer'\nimport {\n  LOAD_PRODUCTS,\n  SET_GRIDVIEW,\n  SET_LISTVIEW,\n  UPDATE_SORT,\n  SORT_PRODUCTS,\n  UPDATE_FILTERS,\n  FILTER_PRODUCTS,\n  CLEAR_FILTERS,\n} from '../actions'\nimport { useProductsContext } from './products_context'\n\nconst initialState = {\n  filtered_products:[],\n  all_products:[],\n  grid_view: true,\n  sort:'price-lowest',\n  filters:{\n    text: '',\n    category: 'all',\n    min_price: 0,\n    max_price: 0,\n    price: 0,\n  }\n}\n\nconst FilterContext = React.createContext()\n\nexport const FilterProvider = ({ children }) => {\n  const {products} = useProductsContext()\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  useEffect(()=>{\n    dispatch({type: LOAD_PRODUCTS, payload: products})\n  }, [products])\n\n  useEffect( ()=>{\n    dispatch({type:FILTER_PRODUCTS})\n    dispatch({type:SORT_PRODUCTS})\n  }, [products, state.sort, state.filters])\n\n  const setGridView = () =>{\n    dispatch({type:SET_GRIDVIEW})\n  }\n\n  const setListView = () =>{\n    dispatch({type:SET_LISTVIEW})\n  }\n\n  const updateSort = (e) =>{\n    const name = e.target.name\n    const value = e.target.value\n    dispatch({type:UPDATE_SORT, payload:value})\n  }\n  \n  const updateFilters = (e)=>{\n    let name = e.target.name\n    let value = e.target.value\n    if(name === 'category'){\n      value = e.target.textContent\n    }\n    if(name === 'price'){\n      value = Number(value)\n    }\n    dispatch({ type: UPDATE_FILTERS, payload:{name,value} })\n  }\n\n  const clearFilters = (e)=>{\n\n  }\n\n  return (\n    <FilterContext.Provider value={{ ...state, setGridView, setListView, updateSort, updateFilters, clearFilters}}>\n      {children}\n    </FilterContext.Provider>\n  )\n}\n// make sure use\nexport const useFilterContext = () => {\n  return useContext(FilterContext)\n}\n"]},"metadata":{},"sourceType":"module"}