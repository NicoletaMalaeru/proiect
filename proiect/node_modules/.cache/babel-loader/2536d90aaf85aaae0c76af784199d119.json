{"ast":null,"code":"import { LOAD_PRODUCTS, SET_LISTVIEW, SET_GRIDVIEW, UPDATE_SORT, SORT_PRODUCTS, UPDATE_FILTERS, FILTER_PRODUCTS, CLEAR_FILTERS } from '../actions';\n\nconst filter_reducer = (state, action) => {\n  if (action.type === LOAD_PRODUCTS) {\n    return { ...state,\n      all_products: [...action.payload],\n      filtered_products: [...action.payload]\n    };\n  }\n\n  if (action.type === SET_GRIDVIEW) {\n    return { ...state,\n      grid_view: true\n    };\n  }\n\n  if (action.type === SET_LISTVIEW) {\n    return { ...state,\n      grid_view: false\n    };\n  }\n\n  if (action.type === UPDATE_SORT) {\n    return { ...state,\n      sort: action.payload\n    };\n  }\n\n  if (action.type === SORT_PRODUCTS) {\n    const {\n      sort,\n      filtered_products\n    } = state;\n    let tempProducts = [...filtered_products];\n\n    if (sort === 'price-lowest') {\n      tempProducts = tempProducts.sort((a, b) => a.price - b.price);\n    }\n\n    if (sort === 'price-highest') {\n      tempProducts = tempProducts.sort((a, b) => b.price - a.price);\n    }\n\n    if (sort === 'name-a') {}\n\n    if (sort === 'name-z') {}\n\n    return { ...state,\n      filtered_products: tempProducts\n    };\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default filter_reducer;","map":{"version":3,"sources":["C:/Users/Gabi/Desktop/niki-store/src/reducers/filter_reducer.js"],"names":["LOAD_PRODUCTS","SET_LISTVIEW","SET_GRIDVIEW","UPDATE_SORT","SORT_PRODUCTS","UPDATE_FILTERS","FILTER_PRODUCTS","CLEAR_FILTERS","filter_reducer","state","action","type","all_products","payload","filtered_products","grid_view","sort","tempProducts","a","b","price","Error"],"mappings":"AAAA,SACEA,aADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,aARF,QASO,YATP;;AAWA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,MAAGA,MAAM,CAACC,IAAP,KAAgBX,aAAnB,EAAiC;AAC/B,WAAO,EAAE,GAAGS,KAAL;AAAYG,MAAAA,YAAY,EAAE,CAAC,GAAGF,MAAM,CAACG,OAAX,CAA1B;AAA8CC,MAAAA,iBAAiB,EAAC,CAAC,GAAGJ,MAAM,CAACG,OAAX;AAAhE,KAAP;AACD;;AACD,MAAGH,MAAM,CAACC,IAAP,KAAgBT,YAAnB,EAAgC;AAC9B,WAAO,EAAE,GAAGO,KAAL;AAAYM,MAAAA,SAAS,EAAC;AAAtB,KAAP;AACD;;AACD,MAAGL,MAAM,CAACC,IAAP,KAAgBV,YAAnB,EAAgC;AAC9B,WAAO,EAAE,GAAGQ,KAAL;AAAYM,MAAAA,SAAS,EAAC;AAAtB,KAAP;AACD;;AACD,MAAGL,MAAM,CAACC,IAAP,KAAeR,WAAlB,EAA8B;AAC5B,WAAO,EAAE,GAAGM,KAAL;AAAYO,MAAAA,IAAI,EAACN,MAAM,CAACG;AAAxB,KAAP;AACD;;AACD,MAAGH,MAAM,CAACC,IAAP,KAAgBP,aAAnB,EAAiC;AAC/B,UAAM;AAACY,MAAAA,IAAD;AAAOF,MAAAA;AAAP,QAA4BL,KAAlC;AACA,QAAIQ,YAAY,GAAG,CAAE,GAAGH,iBAAL,CAAnB;;AACA,QAAGE,IAAI,KAAK,cAAZ,EAA2B;AACvBC,MAAAA,YAAY,GAAGA,YAAY,CAACD,IAAb,CAAkB,CAACE,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAArC,CAAf;AACH;;AACD,QAAGJ,IAAI,KAAK,eAAZ,EAA4B;AAC1BC,MAAAA,YAAY,GAAGA,YAAY,CAACD,IAAb,CAAkB,CAACE,CAAD,EAAGC,CAAH,KAAOA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAArC,CAAf;AACD;;AACD,QAAGJ,IAAI,KAAK,QAAZ,EAAqB,CAEpB;;AACD,QAAGA,IAAI,KAAK,QAAZ,EAAqB,CAEpB;;AACD,WAAM,EAAE,GAAGP,KAAL;AAAYK,MAAAA,iBAAiB,EAAEG;AAA/B,KAAN;AACD;;AAED,QAAM,IAAII,KAAJ,CAAW,gBAAeX,MAAM,CAACC,IAAK,iBAAtC,CAAN;AACD,CAhCD;;AAoCA,eAAeH,cAAf","sourcesContent":["import {\n  LOAD_PRODUCTS,\n  SET_LISTVIEW,\n  SET_GRIDVIEW,\n  UPDATE_SORT,\n  SORT_PRODUCTS,\n  UPDATE_FILTERS,\n  FILTER_PRODUCTS,\n  CLEAR_FILTERS,\n} from '../actions'\n\nconst filter_reducer = (state, action) => {\n  if(action.type === LOAD_PRODUCTS){\n    return { ...state, all_products: [...action.payload],filtered_products:[...action.payload]}\n  }\n  if(action.type === SET_GRIDVIEW){\n    return { ...state, grid_view:true}\n  }\n  if(action.type === SET_LISTVIEW){\n    return { ...state, grid_view:false}\n  }\n  if(action.type=== UPDATE_SORT){\n    return { ...state, sort:action.payload}\n  }\n  if(action.type === SORT_PRODUCTS){\n    const {sort, filtered_products} = state;\n    let tempProducts = [ ...filtered_products];\n    if(sort === 'price-lowest'){\n        tempProducts = tempProducts.sort((a,b)=>a.price - b.price)\n    }\n    if(sort === 'price-highest'){\n      tempProducts = tempProducts.sort((a,b)=>b.price - a.price)\n    }\n    if(sort === 'name-a'){\n      \n    }\n    if(sort === 'name-z'){\n      \n    }\n    return{ ...state, filtered_products: tempProducts}\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`)\n}\n\n\n\nexport default filter_reducer\n"]},"metadata":{},"sourceType":"module"}